from sys import stdin

#Following is the Node class already written for the Linked List
class Node :
    def __init__(self, data) :
        self.data = data
        self.next = None

def printLL(head):
    while head is not None:
        print(str(head.data) + '_>' ,end='')
        head=head.next
    print('None')
    return

def length(head):
    count=0
    while head is not None:
        count+=1
        head=head.next
    return count

def deleteNode(head, pos) :
    if pos<0 and pos>length(head):
        return head
    count=0
    prev=None
    curr=head
    while count<pos and curr is not None:
        prev=curr
        curr=curr.next
        count+=1
    if pos == 0:
    	head=head.next
    	return head
    if head is None:
        return head
    if prev.next == None:
        return head
    prev.next=curr.next
    return head
    
def takeInput() :
    linkedList=[int(ele) for ele in input().split()]
    head=None
    tail=None
    for data in linkedList:
        if data==-1:
            break
        newNode=Node(data)
        if head is None:
            head=newNode
            tail=newNode
        else:
            tail.next=newNode
            tail=newNode
    return head

head=takeInput()
printLL(head)
head=deleteNode(head, 2)
printLL(head)
head=deleteNode(head, 0)
printLL(head)
